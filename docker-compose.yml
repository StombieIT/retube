x-fflow-common: &fflow_common
  build:
    context: fflow
    dockerfile: Dockerfile
  volumes:
    - ./file-storage/fflow-data:/data
  expose:
    - "5050"
  environment: &fflow_env
    PORT: 5050
    HOST: fflow-balancer:5050
    DATA_FOLDER: /data
    # FFMPEG настройки не указываем, так как они уже предусмотрены по дефолту
    FTP_SERVER_HOST: holder-balancer
    FTP_SERVER_PORT: 21
  networks:
    - internal_net

x-uploader: &uploader_common
  depends_on:
    - video-queue
    - cache
    - db
    - fflow-balancer
  build:
    context: uploader-v3
    dockerfile: ../service.Dockerfile
  expose:
    - "4040"
  environment: &uploader_env
    PORT: 4040
    AMQP_CONNECTION_STRING: amqp://video-queue
    CHUNK_UPLOAD_AMQP_EXCHANGE: chunk-exchange
    CHUNK_UPLOAD_AMQP_QUEUE: chunk-upload
    CHUNK_REPLY_AMQP_QUEUE: chunk-reply
    REDIS_CONNECTION_STRING: redis://cache
    FFLOW_CACHE_DB: 0
    API_FFLOW_URL: http://fflow-balancer:5050
    DB_CONNECTION_STRING: postgresql://postgres:postgres@db:5432/retube
    SCHEDULER_SLEEP_TIME: 600000
    SCHEDULER_LIFETIME_MAXIMUM: 3600000
  networks:
    - internal_net

services:
  holder:
    build:
      context: holder
      dockerfile: ../service.Dockerfile
    expose:
      - "4000"
      - "4001"
      - "4002"
      - "4003"
      - "4004"
      - "21"
      - "4050"
    environment:
      - ROOT_PATH=/data
      - DISTRIBUTION_PORT=4050
      - PLAYER_ORIGIN=http://localhost:3000
      - FTP_URL=ftp://0.0.0.0:21
    volumes:
      - ./file-storage/holder:/data
    networks:
      - internal_net
  holder-balancer:
    depends_on:
      - holder
    image: nginx:latest
    container_name: holder-balancer
    # Раздача статики холдера
    ports:
      - "4050:4050"
    volumes:
      - ./holder.nginx.conf:/etc/nginx/nginx.conf:ro
    expose:
      - "4000"
      - "4001"
      - "4002"
      - "4003"
      - "4004"
      - "21"
    networks:
      - internal_net
      - public_net
  fflow-1:
    <<: *fflow_common
    container_name: fflow-1
    environment:
      <<: *fflow_env
      GLOBAL_PREFIX: /r1
  fflow-2:
    <<: *fflow_common
    container_name: fflow-2
    environment:
      <<: *fflow_env
      GLOBAL_PREFIX: /r2
  fflow-3:
    <<: *fflow_common
    container_name: fflow-3
    environment:
      <<: *fflow_env
      GLOBAL_PREFIX: /r3
  fflow-balancer:
    depends_on:
      - fflow-1
      - fflow-2
      - fflow-3
    image: nginx:latest
    container_name: fflow-balancer
    ports:
      - "5050:5050"
    volumes:
      - ./fflow.nginx.conf:/etc/nginx/nginx.conf:ro
      - ./file-storage/fflow/log:/var/log/nginx
    networks:
      - internal_net
  video-queue:
    image: rabbitmq:3-management
    container_name: video-queue
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    expose:
      - "5672"
      - "15672"
    networks:
      - internal_net
  cache:
    image: redis:latest
    container_name: cache
    expose:
      - "6379"
    networks:
      - internal_net
  db:
    image: postgres:latest
    container_name: db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=retube
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - ./file-storage/db:/var/lib/postgresql/data
    networks:
      - internal_net
  uploader:
    <<: *uploader_common
    container_name: uploader
  uploader-standalone:
    <<: *uploader_common
    container_name: uploader-standalone
    environment:
      <<: *uploader_env
      SCHEDULER_ENABLED: true
  gateway:
    build:
      context: gateway
      dockerfile: ../service.Dockerfile
    depends_on:
      - uploader-standalone
    environment:
      - AMQP_CONNECTION_STRING=amqp://video-queue
      - CHUNK_UPLOAD_AMQP_EXCHANGE=chunk-exchange
      - CHUNK_UPLOAD_AMQP_QUEUE=chunk-upload
      - CHUNK_REPLY_AMQP_QUEUE=chunk-reply
      - REDIS_CONNECTION_STRING=redis://cache
      - VIDEO_CACHE_DB=1
      - DB_CONNECTION_STRING=postgresql://postgres:postgres@db:5432/retube
      - PASSWORD_HASH_SECRET=$PASSWORD_HASH_SECRET
      - JWT_SECRET=$JWT_SECRET
      - SYNC_EDITOR_ORIGIN=http://localhost:5445
      - PLAYER_ORIGIN=http://localhost:3000
      - HOLDER_BASE_URL=http://localhost:4050
      - HOLDER_MANIFEST_NAME=manifest
    expose:
      - "4080"
    networks:
      - internal_net
  gateway-balancer:
    depends_on:
      - gateway
    image: nginx:latest
    container_name: gateway-balancer
    volumes:
      - ./gateway.nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "4080:4080"
    networks:
      - internal_net
      - public_net


networks:
  public_net:
    driver: bridge
  internal_net:
    driver: bridge
    internal: true
